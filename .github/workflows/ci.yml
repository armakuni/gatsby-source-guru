name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  test:
    name: Test on Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test
      
    - name: Run test coverage
      run: npm run test:coverage
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.node-version == '20.x'
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        
    - name: Run linting
      run: npm run lint
      if: matrix.node-version == '20.x'

  validate:
    name: Validate Package
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Validate package
      run: npm run validate
      
    - name: Check package contents
      run: npm pack --dry-run
      
    - name: Test TypeScript definitions
      run: npm run type-check

  integration-test:
    name: Integration Test with Gatsby
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Create test Gatsby site
      run: |
        npx create-gatsby@latest test-site --no-install
        cd test-site
        npm install
        
    - name: Install plugin locally
      run: |
        npm pack
        cd test-site
        npm install ../gatsby-source-guru-*.tgz
        
    - name: Test plugin integration
      run: |
        cd test-site
        # Add basic plugin config
        echo "
        module.exports = {
          plugins: [
            {
              resolve: 'gatsby-source-guru',
              options: {
                collectionId: 'test',
                authMode: 'collection',
                collectionToken: 'test'
              }
            }
          ]
        }" > gatsby-config.js
        
        # Test that plugin loads without errors
        npx gatsby build --log-level=error || echo "Expected to fail without real API credentials"

  publish-npm:
    name: Publish to npm
    runs-on: ubuntu-latest
    needs: [test, validate]
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build package
      run: npm run build || echo "No build step defined"
      
    - name: Publish to npm
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Create GitHub deployment
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.repos.createDeployment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: context.sha,
            environment: 'npm',
            description: 'Published to npm'
          })

  publish-gpr:
    name: Publish to GitHub Package Registry
    runs-on: ubuntu-latest
    needs: [test, validate]
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://npm.pkg.github.com'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Update package name for GPR
      run: |
        sed -i 's/"name": "gatsby-source-guru"/"name": "@armakuni\/gatsby-source-guru"/' package.json
        
    - name: Publish to GitHub Package Registry
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=moderate
      
    - name: Run dependency check
      uses: ossf/scorecard-action@v2.3.1
      with:
        results_file: scorecard-results.sarif
        results_format: sarif
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload SARIF results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: scorecard-results.sarif